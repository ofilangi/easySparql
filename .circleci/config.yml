#
#  - Compile JVM/Js
#  - Tests JVM
#  - publish JVM Sonatype Snapshot for branches : master/develop
#  - publish JVM Sonatype Stagge/Release (wait approval) for tags release
#
#  DOCKER_CONTEXT is a context global env variable for all application github p2m2 organization
#   - DOCKER_USER          -> login
#   - DOCKER_PASS          -> password
#   - ORGANIZATION_NAME    -> organization register on dockerhub
#
#  CREDENTIAL_CONTEXT used by build.sbt
#   - REALM_CREDENTIAL,HOST_CREDENTIAL,LOGIN_CREDENTIAL,PASSWORD_CREDENTIAL
#
#  NPM_CONTEXT
#   - NPM_TOKEN : token (from ~/.npmrc) to publish nodejs lib
#
version: 2.1
orbs:
  node: circleci/node@4.2.0
workflows:
  compile-workflow:
    jobs:
      - compile:
          context:
            - DOCKER_CONTEXT

      - lib_js:
          requires:
            - compile
          context:
            - DOCKER_CONTEXT

      - test_js:
          requires:
            - compile
          context:
            - DOCKER_CONTEXT

      - test_and_coverage_jvm:
          requires:
            - compile
          context:
            - DOCKER_CONTEXT

      - publish_snapshot:
          requires:
            - test_and_coverage_jvm
          context:
            - DOCKER_CONTEXT
            - CREDENTIAL_CONTEXT
          filters:
            tags:
              ignore: /.*/
            branches:
              only:
                - develop
                - master

      - publish_tag_to_sonatype_stagge_for_release:
          context:
            - DOCKER_CONTEXT
            - CREDENTIAL_CONTEXT
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

#      - publish_npm:
#          requires:
#            - lib_js
#          context:
#            - NPM_CONTEXT
#          filters:
#            tags:
#              only: /.*/
#            branches:
#              only: strategySourceRequest

      - check_discovery_valid_fullopjs_cdn_jsdelivr:
          filters:
            tags:
              only: /.*/

executors:

  openjdk:
      working_directory: ~/repo
      docker:
        - image: circleci/openjdk:8-jdk
          auth:
            username: ${DOCKER_USER}
            password: ${DOCKER_PASS}

  virtuoso_environment_executor:
      working_directory: ~/repo
      docker:
        - image: circleci/openjdk:8-jdk
          auth:
            username: ${DOCKER_USER}
            password: ${DOCKER_PASS}

        - image: tenforce/virtuoso:virtuoso7.2.5
          auth:
            username: ${DOCKER_USER}
            password: ${DOCKER_PASS}
          environment:
            VIRT_Parameters_NumberOfBuffers: 51000
            VIRT_Parameters_MaxDirtyBuffers: 37500
            VIRT_Parameters_TN_MAX_memory: 4000000
            VIRT_Parameters_TransactionAfterImageLimit: 500000
            VIRT_SPARQL_ResultSetMaxRows: 1000
            VIRT_SPARQL_MaxDataSourceSize: 10000
            VIRT_SPARQL_MaxQueryCostEstimationTime: 0
            VIRT_SPARQL_MaxQueryExecutionTime: 0
            DBA_PASSWORD: dba
            SPARQL_UPDATE: true
            DEFAULT_GRAPH: "graph:test:discovery:default:"

        - image: inraep2m2/service-static-file-server:latest
          auth:
            username: ${DOCKER_USER}
            password: ${DOCKER_PASS}
          environment:
            CORS: "true"
            DEBUG: "true"

jobs:
  compile:
    executor: openjdk
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Compile - JVM
          command: cat /dev/null | sbt discoveryJVM/test:compile

      - run:
          name: Compile - JS
          command: cat /dev/null | sbt discoveryJS/test:compile

  lib_js:
    executor: openjdk
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: fastOptJS
          command: cat /dev/null | sbt discoveryJS/fastOptJS

      - run:
          name: fullOptJS
          command: cat /dev/null | sbt discoveryJS/fullOptJS

      - persist_to_workspace:
          root: ./js/target/scala-2.13/scalajs-bundler/main/
          paths: discovery-opt.js

  test_and_coverage_jvm:
    executor: virtuoso_environment_executor
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Test JVM env and Coverage
          command: |
            cat /dev/null | sbt clean coverage discoveryJVM/test:test
            sbt discoveryJVM/coverageReport
            bash <(curl -s https://codecov.io/bash)
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report

      - store_artifacts:
          path: discovery/jvm/target/test-reports

  test_js:
      executor: virtuoso_environment_executor
      environment:
        JVM_OPTS: -Xmx3200m
        TERM: dumb
      steps:
        - checkout
        - setup_remote_docker
        - node/install
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "build.sbt" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
        - run:
            name: Test JS
            command: sbt discoveryJS/test
        #- run:
        #    name: Set Npm token
        #    command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
        #- run:
        #    name: Publish package
        #    command: npm publish

  publish_snapshot:
    executor: openjdk
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Snapshot publication
          command: |
            export DISCOVERY_VERSION="${CIRCLE_BRANCH}-SNAPSHOT"
            sbt publish

  publish_tag_to_sonatype_stagge_for_release:
    executor: openjdk
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Snapshot publication
          command: |
            export DISCOVERY_VERSION="${CIRCLE_TAG}"
            sbt publish

  check_discovery_valid_fullopjs_cdn_jsdelivr:
    executor: openjdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: compare checksum scala files
          command: |

            cat $(find . -name *.scala | sort -V | grep -v SWDiscoveryVersionAtBuildTime.scala) | md5sum > ./checksum

            F1=./checksum
            F2=./dist/checksum

            if [ "$(diff -q $F1 $F2)" != ""  ]; then
               echo "current checksum : "$(cat checksum)
               echo "repo checksum    : "$(cat dist/checksum)
               exit 1;
            fi ;

  publish_npm:
    docker:
      - image: circleci/node:12.20
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASS}
    working_directory: ~/repo
    steps:
        - checkout
        - setup_remote_docker
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "build.sbt" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-

        - attach_workspace:
            at: ~/repo/js/target/scala-2.13/scalajs-bundler/main/

        - run:
            name: Authenticate with registry
            command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

        - run:
            name: Js Opt Lib generation
            command: |
              npm config set registry http://registry.npmjs.org
              npm version 0.0.4
              npm publish --access public
