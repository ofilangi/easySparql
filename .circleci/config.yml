#
#  - Compile JVM/Js
#  - Tests JVM
#  - publish JVM Sonatype Snapshot for branches : master/develop
#  - publish JVM Sonatype Stagge/Release (wait approval) for tags release
#
#  DOCKER_CONTEXT is a context global env variable for
#  all application github p2m2 organization
#   - DOCKER_USER          -> login
#   - DOCKER_PASS          -> password
#   - ORGANIZATION_NAME    -> organization register on dockerhub
#
#  CREDENTIAL_CONTEXT used by build.sbt
#   - REALM_CREDENTIAL,HOST_CREDENTIAL,LOGIN_CREDENTIAL,PASSWORD_CREDENTIAL
#
#  NPM_CONTEXT
#   - NPM_TOKEN : token (from ~/.npmrc) to publish nodejs lib
#
version: 2.1
orbs:
  node: circleci/node@5.1.0
workflows:
  compile-workflow:
    jobs:
      - compile:
          context:
            - DOCKER_CONTEXT

      - lib_js:
          requires:
            - compile
          context:
            - DOCKER_CONTEXT

      - test_js:
          requires:
            - compile
          context:
            - DOCKER_CONTEXT

      - test_and_coverage_jvm:
          requires:
            - compile
          context:
            - DOCKER_CONTEXT

      - proxy_discovery_test:
          requires:
            - test_and_coverage_jvm
          context:
            - DOCKER_CONTEXT
      # only develop is build and push on dockerhub !
      - docker_build_proxy_discovery_branch:
          context:
            - DOCKER_CONTEXT
          filters:
            tags:
              ignore: /.*/
            branches:
              only:
                - develop

      # all tags are build and push on dockerhub !
      - docker_build_proxy_discovery_tag_latest:
          context:
            - DOCKER_CONTEXT
          filters:
            tags:
              only: /.*/
            branches:
              # nothing coming from branch are deployed as latest
              ignore: /.*/

      - publish_snapshot:
          requires:
            - test_and_coverage_jvm
          context:
            - DOCKER_CONTEXT
            - CREDENTIAL_CONTEXT
            - GPG_CONTEXT
          filters:
            tags:
              ignore: /.*/
            branches:
              only:
                - develop
                - master

      - publish_tag_to_sonatype_stagge_for_release:
          context:
            - DOCKER_CONTEXT
            - CREDENTIAL_CONTEXT
            - GPG_CONTEXT
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

      - build_webpack_fullOptJS_npm_publish:
          context:
            - DOCKER_CONTEXT
            - CREDENTIAL_CONTEXT
            - NPM_CONTEXT
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

      - build_release_assembly:
          context:
            - DOCKER_CONTEXT
            - CREDENTIAL_CONTEXT
          filters:
            branches:
              only:
                - master

      - publish-github-release:
          requires:
            - build_release_assembly
          context:
            - DOCKER_CONTEXT
            - CREDENTIAL_CONTEXT
            - GITHUB_CONTEXT
          filters:
            branches:
              only:
                - master

      - build_javascript_distribution:
          context:
            - DOCKER_CONTEXT
            - GITHUB_CONTEXT
          filters:
            branches:
              only:
                - develop
                - master

executors:

  openjdk:
    working_directory: ~/repo
    docker:
      - image: cimg/openjdk:19.0.2
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASS}

  virtuoso_environment_executor:
    working_directory: ~/repo
    docker:
      - image: cimg/openjdk:19.0.2
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASS}

      - image: tenforce/virtuoso:virtuoso7.2.5
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASS}
        environment:
          VIRT_Parameters_NumberOfBuffers: 51000
          VIRT_Parameters_MaxDirtyBuffers: 37500
          VIRT_Parameters_TN_MAX_memory: 4000000
          VIRT_Parameters_TransactionAfterImageLimit: 500000
          VIRT_SPARQL_ResultSetMaxRows: 1000
          VIRT_SPARQL_MaxDataSourceSize: 10000
          VIRT_SPARQL_MaxQueryCostEstimationTime: 0
          VIRT_SPARQL_MaxQueryExecutionTime: 0
          DBA_PASSWORD: dba
          SPARQL_UPDATE: true
          DEFAULT_GRAPH: "graph:test:discovery:default:"

      - image: inraep2m2/service-static-file-server:latest
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASS}
        environment:
          CORS: "true"
          DEBUG: "true"

  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASS}

jobs:
  compile:
    executor: openjdk
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - run:
          name: Compile - JVM
          command: cat /dev/null | sbt discoveryJVM/test:compile

      - run:
          name: Compile - JS
          command: cat /dev/null | sbt discoveryJS/test:compile

  lib_js:
    executor: openjdk
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: fastOptJS
          command: cat /dev/null | sbt discoveryJS/fastOptJS

      - run:
          name: fullOptJS
          command: cat /dev/null | sbt discoveryJS/fullOptJS

  test_and_coverage_jvm:
    executor: virtuoso_environment_executor
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - run:
          name: Test JVM env and Coverage
          command: |
            cat /dev/null | sbt clean coverage \
            discoveryJVM/Test/test discoveryJVM/coverageReport
            bash <(curl -s https://codecov.io/bash)
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report
      - store_artifacts:
          path: discovery/jvm/target/test-reports

  proxy_discovery_test:
    executor: openjdk
    environment:
      MILL_VERSION: '0.10.11'
    steps:
      - checkout
      - run:
          name: Test JVM env and Coverage
          command: |
            cd service-discovery-proxy
            curl -L https://github.com/com-lihaoyi/mill/releases/download/${MILL_VERSION}/${MILL_VERSION} > mill
            chmod +x mill
            ./mill app.test

  docker_build_proxy_discovery_branch:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish Docker Image to Docker Hub
          # publication of <application>:<application_branch>
          command: |
            IMAGE_NAME=service-discovery-proxy:${CIRCLE_BRANCH}
            docker build -t ${ORGANIZATION_NAME}/${IMAGE_NAME} .
            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
            docker push ${ORGANIZATION_NAME}/${IMAGE_NAME}

  docker_build_proxy_discovery_tag_latest:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish Docker Tag to Docker Hub
          # publication of <application>:<application_tag>
          command: |
            IMAGE_NAME=service-discovery-proxy:${CIRCLE_TAG}
            IMAGE_NAME_LATEST=service-discovery-proxy:latest

            docker build -t ${ORGANIZATION_NAME}/${IMAGE_NAME} .
            docker build -t ${ORGANIZATION_NAME}/${IMAGE_NAME_LATEST} .

            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
            docker push ${ORGANIZATION_NAME}/${IMAGE_NAME}
            docker push ${ORGANIZATION_NAME}/${IMAGE_NAME_LATEST}

  test_js:
    executor: virtuoso_environment_executor
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - setup_remote_docker
      - node/install:
          node-version: '19.6'
      - run:
          name: Test ScalaJs/JavaScript
          command: sbt discoveryJS/test
      - run:
          name: Test TypeScript
          command: |
            ## bug with Node 17 -> https://github.com/webpack/webpack/issues/14532
            export NODE_OPTIONS=--openssl-legacy-provider
            sbt discoveryJS/fastOptJS/webpack
            sbt npmPackageJson
            npm i
            npm test

  publish_snapshot:
    executor: openjdk
    steps:
      - checkout
      - run:
          name: Snapshot publication
          command: |
            export DISCOVERY_VERSION="${CIRCLE_BRANCH}-SNAPSHOT"
            echo "Importing key"
            echo -e "$GPG_KEY" | gpg --import
            sbt publish

  publish_tag_to_sonatype_stagge_for_release:
    executor: openjdk
    steps:
      - checkout
      - run:
          name: Snapshot publication
          command: |
            export DISCOVERY_VERSION="${CIRCLE_TAG}"
            echo "Importing key"
            echo -e "$GPG_KEY" | gpg --import
            sbt publish

  build_javascript_distribution:
    executor: openjdk
    steps:
      - checkout
      - node/install:
          node-version: '19.6'
      - run:
          name: Release Assembly
          command: |
            export NODE_OPTIONS=--openssl-legacy-provider
            export DISCOVERY_VERSION="${CIRCLE_TAG}"
            export BRANCH=${CIRCLE_TAG:=$CIRCLE_BRANCH}
            git config --global -l
            git config --global user.email circleci@circleci
            git config --global user.name CircleCI
            # browser debug lib
            sbt discoveryJS/fastOptJS/webpack
            # browser release lib
            sbt discoveryJS/fullOptJS/webpack
            # browser lib js
            cp $(find ./js -name discovery-fastopt-bundle.js)  ./dist/discovery-web-dev.js
            cp $(find ./js -name discovery-fastopt-bundle.js.map)  ./dist/discovery-web-dev.js.map
            cp $(find ./js -name discovery-opt-bundle.js)  ./dist/discovery-web.js
            if [[ ! -z "$(git status -s | grep -v -E "^\?\?")" ]]; then
              git commit dist -m"[ci skip] - Javascript librairies publication"
              git push -q https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git $BRANCH
            fi

  build_webpack_fullOptJS_npm_publish:
    executor: openjdk
    steps:
      - checkout
      - node/install:
          node-version: '19.6'
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: WebPack fullOptJS
          command: |
            export NODE_OPTIONS=--openssl-legacy-provider
            npm config set registry https://registry.npmjs.org
            export DISCOVERY_VERSION="${CIRCLE_TAG}"
            sbt discoveryJS/fullOptJS/webpack
            sbt npmPackageJson
            npm unpublish @p2m2/discovery@${DISCOVERY_VERSION}
            last=$(npm view @p2m2/discovery version)
            [ "$last" = "${DISCOVERY_VERSION}" ] && sleep 5s
            npm publish --access public

  build_release_assembly:
    executor: openjdk
    steps:
      - checkout
      - node/install:
          node-version: '19.6'
      - run:
          name: Release Assembly
          command: |
            LAST_VERSION=$(git ls-remote --tags --sort="v:refname" https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git | tail -n1  | sed 's/.*\///; s/\^{}//')
            VERSION=$(grep -E "static_version_build[[:blank:]]*=[[:blank:]]*" build.sbt | awk 'BEGIN { FS="="} {gsub("\"","",$2) ; gsub(/[ \t]*/, "", $2);print $2}')
            if [ "LAST_VERSION" != "VERSION" ]; then
              sbt discoveryJVM/assembly
              mkdir -p build
              mv ./jvm/target/scala-2.13/discovery-$VERSION.jar build/
              cp dist/discovery-web-dev.js build/discovery-web-dev-$VERSION.js
              cp dist/discovery-web-dev.js.map build/discovery-web-dev-$VERSION.js.map
              cp dist/discovery-web.js build/discovery-web-$VERSION.js
              export NODE_OPTIONS=--openssl-legacy-provider
              sbt discoveryJS/fastOptJS/webpack
              sbt npmPackageJson
              cp package.json build/
            fi

      - persist_to_workspace:
          root: build
          paths:
            - .

  publish-github-release:
    docker:
      - image: cimg/go:1.20.0
    steps:
      - checkout
      - node/install:
          node-version: '19.6'
      - attach_workspace:
          at: build
      - run:
          name: "Publish Release on GitHub"
          command: |
            LAST_VERSION=$(git ls-remote --tags --sort="v:refname" https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git | tail -n1  | sed 's/.*\///; s/\^{}//')
            VERSION=$(grep -E "static_version_build[[:blank:]]*=[[:blank:]]*" build.sbt | awk 'BEGIN { FS="="} {gsub("\"","",$2) ; gsub(/[ \t]*/, "", $2);print $2}')
            # -------------------------------------------------------
            # utiliser gh ? => https://github.com/cli/cli/blob/trunk/docs/install_linux.md
            #                  https://cli.github.com/manual/gh_release_create
            # -------------------------------------------------------
            if [ "LAST_VERSION" != "VERSION" ]; then
              go get github.com/tcnksm/ghr
              npm i generate-changelog -g
              mv build/package.json .
              BODY=$(changelog -a -f -)
              ghr -t ${GITHUB_TOKEN} \
                  -u ${CIRCLE_PROJECT_USERNAME} \
                  -r ${CIRCLE_PROJECT_REPONAME} \
                  -c ${CIRCLE_SHA1} \
                  -n $VERSION \
                  -b "$BODY" \
                  -delete $VERSION build/
            fi
# obsolete
  check_discovery_valid_fullopjs_cdn_jsdelivr:
    executor: openjdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: compare checksum scala files
          command: |

            cat $(find . -name *.scala | sort -V | grep -v SWDiscoveryVersionAtBuildTime.scala) | md5sum > ./checksum

            F1=./checksum
            F2=./dist/checksum

            if [ "$(diff -q $F1 $F2)" != ""  ]; then
               echo "current checksum : "$(cat checksum)
               echo "repo checksum    : "$(cat dist/checksum)
               exit 1;
            fi ;
